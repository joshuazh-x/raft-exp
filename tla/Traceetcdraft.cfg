\* A trace specification defines a set of one or more traces, wherein the value of some
\* variables in each state aligns with the values specified on the corresponding line
\* of the log or trace file. Commonly, the log file might be incomplete, failing to
\* provide the value of all variables. In such instances, the omitted values are
\* determined non-deterministically, adhering to the high-level specification's parameters.
\* Furthermore, a trace may not be complete such that it only matches a prefix of the log.
SPECIFICATION
    TraceSpec

VIEW
    TraceView

\* TLA has only limited support for hyperproperties.  The following property is a poorman's
\* hyperproperty that asserts that TLC generated *at least one* trace that fully matches the
\* log file. 
PROPERTIES
    TraceMatched

PROPERTIES 
    etcdSpec

\* Checking for deadlocks during trace validation is disabled, as it may lead to false
\* counterexamples. A trace specification defines a set of traces, where at least one
\* trace is expected to match the log file in terms of variable values and length.
\* However, partial matches may occur where the trace cannot be extended to fully
\* correspond with the log file. In such cases, deadlock checking would report the first
\* of these traces.
CHECK_DEADLOCK
    FALSE

CONSTANTS
    InitServer <- TraceInitServer
    Server <- TraceServer

    \* InitDurableState <- TraceInitDurableState

    Nil         = "0"
    
    ValueEntry  = "ValueEntry"
    ConfigEntry = "ConfigEntry"

    Follower    = "StateFollower"
    Candidate   = "StateCandidate"
    Leader      = "StateLeader"
    RequestVoteRequest      =   "RequestVoteRequest"
    RequestVoteResponse     =   "RequestVoteResponse"
    AppendEntriesRequest    =   "AppendEntriesRequest"
    AppendEntriesResponse   =   "AppendEntriesResponse"
